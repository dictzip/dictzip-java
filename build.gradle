import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    // bintray
    id "com.jfrog.bintray" version "1.6"
    id "com.github.spotbugs" version "1.7.1"
    id "org.nosphere.gradle.github.actions" version "1.1.0"
    id 'maven-publish'
    id 'de.ploing.scmversion' version '0.6.6'
}

// common settings
subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    checkstyle {
        config = resources.text.fromFile("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures = true
        toolVersion = '6.16.1'
    }

    repositories {
        jcenter()
    }

    dependencies {
        testImplementation 'org.testng:testng:6.9.10'
    }
    test.useTestNG()

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }

    javadoc {
        options.locale = 'en_US'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }
}

project(':dictzip-lib') {
    dependencies {
        testImplementation 'tokyo.northside:northside-io:0.2.0'
    }
    version = project.version
    group = projectGroup
    bintray {
        dryRun = false
        publish = false
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        configurations = ['archives']
        pkg {
            repo = 'maven'
            name = 'dictzip-lib'
            userOrg = 'dictzip'
            licenses = ['GPL-2.0+CE']
            vcsUrl = projectUrl
            labels = ['java','dictzip']
            publicDownloadNumbers = true
        }
    }

    install {
        repositories.mavenInstaller {
            pom.project {
                name = project.name
                packaging = 'jar'
                description = projectDesc
                url = projectUrl
                version = project.version
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                        distribution = 'repo'
                    }
                }
                scm {
                    url = githubUrl
                    connection = "scm:git:${githubUrl}"
                    developerConnection = "scm:git:${githubUrl}"
                }
                developers {
                    developer {
                        id = projectOwner
                        name = developerName
                        email = developerEmail
                    }
                }
            }
        }
    }
}

project(':dictzip-cli') {
    apply plugin: 'application'
    mainClassName = 'org.dict.zip.cli.Main'
    applicationName = 'dictzip'

    dependencies {
        implementation project(':dictzip-lib'),
           'gnu.getopt:java-getopt:1.0.13'
        testImplementation 'tokyo.northside:northside-io:0.2.0'
    }
    version = project.version
    group = projectGroup
    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        configurations = ['archives']
        pkg {
            repo = 'maven'
            name = 'dictzip-cli'
            userOrg = 'dictzip'
            licenses = ['GPL-3.0']
            vcsUrl = projectUrl
            labels = ['java','dictzip']
            publicDownloadNumbers = true
        }
    }

    task mandoc(type: Copy) {
        from "doc/dictzip.1.in"
        into 'build/docs'
        rename { String fileName ->
            fileName.replace('dictzip.1.in', 'dictzip.1')
        }
        filter(ReplaceTokens, tokens: [copyright: projectYears, version: project.version])
    }

    distTar {
        compression = Compression.GZIP
    }
    distTar.dependsOn mandoc

    distributions {
        main {
            baseName = 'dictzip'
            contents {
                from('build/docs/dictzip.1') {
                    into 'docs/man/man1'
                }
                from(javadocJar) {
                    into 'docs'
                }
                from(sourcesJar) {
                    into 'source'
                }
            }
        }
    }
}

publishing {
  publications {
      mavenJava(MavenPublication) {
          artifactId = "dictzip"
          groupId = "org.dict.zip"
          version = project.version.toString()
          pom {
            name.set(project.name)
            description.set(projectDesc)
            url.set(projectUrl)
            licenses {
              license {
                name.set("GNU General Public License Version 2+CE")
                url.set("https://www.gnu.org/licenses/old-licenses/gpl-2.0")
              }
            }
            scm {
              connection.set("scm:git:git://github.com/dictzip/dictzip-java.git")
              url.set("https://github.com/dictzip/dictzip-java")
            }
            issueManagement {
              system.set("Trac")
              url.set("https://github.com/dictzip/dictzip-java/issues")
            }
          }
      }
  }
}

