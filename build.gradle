import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java-library'
    id "org.nosphere.gradle.github.actions" version "1.1.0"
    id 'maven-publish'
    id 'com.palantir.git-version' version "0.12.3"
}

// Drop prefix 'v' from latest tag version.
version = {it -> it.substring(1, it.length())}(gitVersion())

repositories {
    mavenCentral()
    maven {
        name = "GitLabPackages"
        url "https://gitlab.com/api/v4/groups/dictzip/-/packages/maven"
        credentials(HttpHeaderCredentials) {
            name = 'Job-Token'
            value = System.getenv("CI_JOB_TOKEN")
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

// common settings
subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    checkstyle {
        config = resources.text.fromFile("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures = true
        toolVersion = '6.16.1'
    }
    version = rootProject.version
    group = projectGroup

    dependencies {
        testImplementation 'commons-io:commons-io:2.6'
        testImplementation 'org.testng:testng:6.9.10'
    }
    test.useTestNG()

    java {
        withSourcesJar()
        withJavadocJar()
    }

    javadoc {
        options.locale = 'en_US'
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }
}

project(':dictzip-lib') {
    apply plugin: 'java-library'
    version = rootProject.version
    install {
        repositories.mavenInstaller {
            pom.project {
                name = project.name
                packaging = 'jar'
                description = projectDesc
                url = projectUrl
                version = project.version
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                        distribution = 'repo'
                    }
                }
                scm {
                    url = githubUrl
                    connection = "scm:git:${githubUrl}"
                    developerConnection = "scm:git:${githubUrl}"
                }
                developers {
                    developer {
                        id = projectOwner
                        name = developerName
                        email = developerEmail
                    }
                }
            }
        }
    }

    publishing {
        publications {
            project.afterEvaluate {
                mavenJava(MavenPublication) {
                    from components.java
                    artifactId = "dictzip"
                    groupId = "org.dict.zip"
                    version = project.version.toString()
                    pom {
                        name.set(project.name)
                        description.set(projectDesc)
                        url.set(projectUrl)
                        licenses {
                            license {
                                name.set("GNU General Public License Version 2+CE")
                                url.set("https://www.gnu.org/licenses/old-licenses/gpl-2.0")
                            }
                        }
                        scm {
                            connection.set("scm:git:git://github.com/dictzip/dictzip-java.git")
                            url.set("https://github.com/dictzip/dictzip-java")
                        }
                        issueManagement {
                            system.set("Trac")
                            url.set("https://github.com/dictzip/dictzip-java/issues")
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/dictzip/dictzip-java"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
            maven {
                name = "GitLabPackages"
                url = "https://gitlab.com/api/v4/groups/dictzip/-/packages/maven"
                credentials(HttpHeaderCredentials) {
                    name = 'Job-Token'
                    value = System.getenv("CI_JOB_TOKEN")
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
    }
}

project(':dictzip-cli') {
    apply plugin: 'application'
    mainClassName = 'org.dict.zip.cli.Main'
    applicationName = 'dictzip'
    version = rootProject.version
    dependencies {
        implementation project(':dictzip-lib')
        implementation 'gnu.getopt:java-getopt:1.0.13'
    }
    task mandoc(type: Copy) {
        from "doc/dictzip.1.in"
        into 'build/docs'
        rename { String fileName ->
            fileName.replace('dictzip.1.in', 'dictzip.1')
        }
        filter(ReplaceTokens, tokens: [copyright: projectYears, version: project.version])
    }

    distTar {
        compression = Compression.GZIP
    }
    distTar.dependsOn mandoc

    distributions {
        main {
            baseName = 'dictzip'
            contents {
                from('build/docs/dictzip.1') {
                    into 'docs/man/man1'
                }
                from(javadocJar) {
                    into 'docs'
                }
                from(sourcesJar) {
                    into 'source'
                }
            }
        }
    }
}
